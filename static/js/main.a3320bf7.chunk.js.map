{"version":3,"sources":["components/Title.js","components/Popup.js","components/Form.js","components/Modal.js","components/RemoveUserPopup.js","components/UsersList.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","className","Popup","_ref","message","classes","Form","users","addUser","currentNickname","currentEmail","currentIpaddress","handleInputChange","changeClass","nicknameClass","emailClass","ipaddressClass","validEmail","test","validIp","userExists","filter","item","nickname","toLowerCase","emailExists","email","enabled","length","msgName","msgEmail","msgIp","onSubmit","htmlFor","type","id","name","maxLength","value","onChange","onFocus","components_Popup","disabled","Modal","remove","onClick","RemoveUserPopup","toggleItem","colSpan","UsersList","removeAllUsers","removeUser","sort","removeAllClass","removeUserClass","Fragment","components_Modal","map","index","key","ipaddress","date","time","isClicked","components_RemoveUserPopup","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","defineProperty","target","preventDefault","d","Date","toLocaleDateString","toLocaleTimeString","newUser","state","concat","toConsumableArray","filteredUsers","i","objectSpread","sorted","sortByDateAndTime","b","localeCompare","reverse","components_Title","components_Form","components_UsersList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3320bf7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = () => <h1 className=\"title\">Crypto users</h1>\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nconst Popup = ({message, classes}) => <span className={classes}>{message}</span>\r\n\r\nexport default Popup;","import React from 'react';\r\nimport Popup from './Popup';\r\n\r\nconst Form = ({users, addUser, currentNickname, currentEmail, currentIpaddress, handleInputChange, changeClass, nicknameClass, emailClass, ipaddressClass}) => {\r\n\r\n    const emailRegex = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const validEmail = emailRegex.test(currentEmail);\r\n    const ipRegex = /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/;\r\n    const validIp = ipRegex.test(currentIpaddress);\r\n  \r\n    const userExists = users.filter(item => item.nickname.toLowerCase() === currentNickname.toLowerCase());\r\n    const emailExists = users.filter(item => item.email.toLowerCase() === currentEmail.toLowerCase());\r\n  \r\n    const enabled = currentNickname.length > 0 && validEmail && validIp && !(userExists.length || emailExists.length);\r\n  \r\n    let msgName = '';\r\n    if(!currentNickname.length > 0) msgName = \"Nickname is required\";\r\n    if(userExists.length) msgName = \"Nickname already exists\";\r\n  \r\n    let msgEmail = '';\r\n    if(emailExists.length) msgEmail = \"Email already exists\";\r\n    if(!validEmail) msgEmail = \"Wrong email format\";\r\n    if(!currentEmail.length > 0) msgEmail = \"Email is required\";\r\n  \r\n    let msgIp = '';\r\n    if(!validIp) msgIp = \"Wrong IP address format\";\r\n    if(!currentIpaddress.length > 0) msgIp = \"IP address is required\";\r\n  \r\n    return (\r\n      <form className=\"form\" onSubmit={addUser}>\r\n  \r\n        <label htmlFor=\"nickname\" className=\"form__label\">Nickname</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nickname\"\r\n          className=\"form__input\"\r\n          name=\"currentNickname\"\r\n          maxLength=\"30\"\r\n          value={currentNickname}\r\n          onChange={handleInputChange}\r\n          onFocus={changeClass}\r\n        />\r\n        {msgName === '' ? null : <Popup classes={nicknameClass} message={msgName} />}\r\n  \r\n        <label htmlFor=\"email\" className=\"form__label\">Email</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          className=\"form__input\"\r\n          name=\"currentEmail\"\r\n          maxLength=\"30\"\r\n          value={currentEmail}\r\n          onChange={handleInputChange}\r\n          onFocus={changeClass}\r\n        />\r\n        {msgEmail === '' ? null : <Popup classes={emailClass} message={msgEmail} />}\r\n          \r\n        <label htmlFor=\"ipaddress\" className=\"form__label\">IP address</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"ipaddress\"\r\n          className=\"form__input\"\r\n          name=\"currentIpaddress\"\r\n          maxLength=\"39\" //ipv6\r\n          value={currentIpaddress}\r\n          onChange={handleInputChange}\r\n          onFocus={changeClass}\r\n        />\r\n        {msgIp === '' ? null : <Popup classes={ipaddressClass} message={msgIp} />}\r\n  \r\n        <button type=\"submit\" className=\"button add\" disabled={!enabled}>Add user</button>\r\n  \r\n      </form>\r\n    );\r\n  }\r\n\r\n  export default Form;","import React from 'react';\r\n\r\nconst Modal = ({classes, remove, changeClass}) => (\r\n    <div className={classes}>\r\n      <div className=\"modal__content\">\r\n          <span className=\"modal__message\">Are you sure you want to remove all users?</span>\r\n          <button className=\"button remove\" onClick={remove}>Remove</button>\r\n          <button className=\"button cancel\" name=\"cancelAll\" onClick={changeClass}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  export default Modal;","import React from 'react';\r\n\r\nconst RemoveUserPopup = ({classes, remove, changeClass, nickname, toggleItem}) => (\r\n    <tr className={classes}>\r\n      <td colSpan=\"4\" className=\"popup__content\">\r\n        <span className=\"popup__message\">Are you sure you want to remove this user? &#9650;</span>\r\n        <button className=\"button remove\" onClick={remove}>Remove</button>\r\n        <button className=\"button cancel\" name=\"cancelUser\" onClick={() => {toggleItem(nickname); changeClass(\"cancelUser\");}}>Cancel</button>\r\n      </td>\r\n    </tr>\r\n  )\r\n\r\n  export default RemoveUserPopup;","import React from 'react';\r\nimport Modal from './Modal';\r\nimport RemoveUserPopup from './RemoveUserPopup';\r\n\r\nconst UsersList = ({users, removeAllUsers, removeUser, sort, removeAllClass, removeUserClass, toggleItem, changeClass}) => (\r\n    <>\r\n    <button name=\"removeAll\" className=\"button remove\" onClick={changeClass}>Remove all users</button>\r\n  \r\n    <Modal classes={removeAllClass} remove={removeAllUsers} changeClass={changeClass} />\r\n    <div className=\"container\">\r\n      <table className=\"table\">\r\n        <thead className=\"table__head\">\r\n          <tr className=\"table__head__row\">\r\n            <th className=\"table__head__cell\">Nickname\r\n              <span className=\"sort\" onClick={() => sort(\"nickname/asc\")}>&#9650;</span>\r\n              <span className=\"sort\" onClick={() => sort(\"nickname/des\")}>&#9660;</span>\r\n            </th>\r\n            <th className=\"table__head__cell\">Email\r\n              <span className=\"sort\" onClick={() => sort(\"email/asc\")}>&#9650;</span>\r\n              <span className=\"sort\" onClick={() => sort(\"email/des\")}>&#9660;</span>\r\n            </th>\r\n            <th className=\"table__head__cell\">IP address</th>\r\n            <th className=\"table__head__cell\">Registration date\r\n              <span className=\"sort\" onClick={() => sort(\"date/asc\")}>&#9650;</span>\r\n              <span className=\"sort\" onClick={() => sort(\"date/des\")}>&#9660;</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {users.map((item, index) => \r\n        <>\r\n          <tr className=\"table__row\" key={index}>\r\n            <td className=\"table__cell\">{item.nickname}</td>\r\n            <td className=\"table__cell\">{item.email}</td>\r\n            <td className=\"table__cell\">{item.ipaddress}</td>\r\n            <td className=\"table__cell\">{item.date}, {item.time} <span className=\"delete\" onClick={() => {toggleItem(item.nickname); changeClass(\"removeUser\");}}>&times;</span></td>\r\n          </tr>\r\n          {item.isClicked ? <RemoveUserPopup classes={removeUserClass} changeClass={changeClass} remove={() => removeUser(item.nickname)} nickname={item.nickname} toggleItem={toggleItem} /> : null }\r\n        </>)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  export default UsersList;","import React, { Component } from 'react';\nimport Title from './components/Title';\nimport Form from './components/Form';\nimport UsersList from './components/UsersList';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      users: [\n        {\n          nickname: \"Cat\",\n          email: \"cat@gmail.com\",\n          ipaddress: \"127.255.255.255\",\n          date: \"2.06.2019\",\n          time: \"19:05:33\",\n          isClicked: false\n        },\n        {\n          nickname: \"Dog\",\n          email: \"dog@gmail.com\",\n          ipaddress: \"127.255.255.255\",\n          date: \"2.06.2019\",\n          time: \"19:08:33\",\n          isClicked: false\n        },\n        {\n          nickname: \"Wolf\",\n          email: \"wolf@gmail.com\",\n          ipaddress: \"127.255.255.255\",\n          date: \"3.06.2019\",\n          time: \"19:10:33\",\n          isClicked: false\n        }\n      ],\n        currentNickname: '',\n        currentEmail: '',\n        currentIpaddress: '',\n        nicknameClass: 'hide',\n        emailClass: 'hide',\n        ipaddressClass: 'hide',\n        removeAllClass: 'hide',\n        removeUserClass: 'hide'\n    }\n  }\n  \n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  addUser = (event) => {\n    event.preventDefault();\n    const d = new Date();\n    const date = d.toLocaleDateString();\n    const time = d.toLocaleTimeString();\n    const newUser = {\n      nickname: this.state.currentNickname,\n      email: this.state.currentEmail,\n      ipaddress: this.state.currentIpaddress,\n      date: date,\n      time: time,\n      isClicked: false\n    };\n    this.setState({\n      users: [...this.state.users, newUser],\n      currentNickname: '',\n      currentEmail: '',\n      currentIpaddress: '',\n      nicknameClass: 'hide',\n      emailClass: 'hide',\n      ipaddressClass: 'hide',\n    });\n  }\n  \n  changeClass = (event) => {\n    if(typeof event === \"string\") \n    switch(event){\n      case \"removeUser\": this.setState({removeUserClass: 'popup'}); break;\n      case \"cancelUser\":\n        const filteredUsers = this.state.users;\n        for(let i = 0; i < filteredUsers.length; i++)\n        filteredUsers[i].isClicked = false;\n        this.setState({users: filteredUsers, removeUserClass: 'hide'}); break;\n        default: break;\n    }\n    else\n    switch(event.target.name){\n      case \"currentNickname\": this.setState({nicknameClass: 'show'}); break;\n      case \"currentEmail\": this.setState({emailClass: 'show'}); break;\n      case \"currentIpaddress\": this.setState({ipaddressClass: 'show'}); break;\n      case \"removeAll\": this.setState({removeAllClass: 'modal'}); break;\n      case \"cancelAll\": this.setState({removeAllClass: 'hide'}); break;\n      default: break;\n    }\n  }\n\n  toggleItem = (nickname) => {\n    const filteredUsers = this.state.users.map(item => item.nickname === nickname ? {...item, isClicked: !item.isClicked} : item);\n    filteredUsers.map(item => item.nickname === nickname ? item.isClicked === true ? {...item, removeUserClass: 'popup'} : null : null )\n    this.setState({\n      users: filteredUsers\n    });\n  }\n  \n  removeAllUsers = () => this.setState({users: []});\n\n  removeUser = (nickname) => {\n    const filteredUsers = this.state.users.filter(item => item.nickname !== nickname);\n    this.setState({\n      users: filteredUsers\n    });\n  }\n\n  sort = (type) => {\n    const sorted = this.state.users;\n    const sortByDateAndTime = (a, b) => {\n      return a.date.localeCompare(b.date) || a.time.localeCompare(b.time);\n    }\n\n    switch(type){\n      case \"nickname/asc\": sorted.sort((a, b) => a.nickname.localeCompare(b.nickname)); break;\n      case \"nickname/des\": sorted.sort((b, a) => a.nickname.localeCompare(b.nickname)); break;\n      case \"email/asc\": sorted.sort((a, b) => a.email.localeCompare(b.email)); break;\n      case \"email/des\": sorted.sort((b, a) => a.email.localeCompare(b.email)); break;\n      case \"date/asc\": sorted.sort(sortByDateAndTime); break;\n      case \"date/des\": sorted.sort(sortByDateAndTime).reverse(); break;\n      default: break;\n    }\n    \n    this.setState({\n      users: sorted\n    });\n  }\n\n\n  render(){\n    return (\n      <div className=\"page\">\n        <div className=\"App\">\n          <Title />\n\n          <Form \n            users={this.state.users}\n            addUser={this.addUser}\n            currentNickname={this.state.currentNickname} currentEmail={this.state.currentEmail} currentIpaddress={this.state.currentIpaddress}\n            handleInputChange={this.handleInputChange}\n            nicknameClass={this.state.nicknameClass} emailClass={this.state.emailClass} ipaddressClass={this.state.ipaddressClass}\n            changeClass={this.changeClass}\n          />\n          \n          {this.state.users.length > 0 ? \n            <UsersList \n              users={this.state.users}\n              removeAllUsers={this.removeAllUsers}\n              removeUser={this.removeUser}\n              sort={this.sort}\n              removeAllClass={this.state.removeAllClass}\n              removeUserClass={this.state.removeUserClass}\n              toggleItem={this.toggleItem}\n              changeClass={this.changeClass}\n            />\n          : null}\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}